// This is a skeleton starter React page generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import OrderItem from "../components/OrderItem";
import { PlasmicHomepage } from "../components/plasmic/isv/PlasmicHomepage";
import options from "../data.json";
import useSWR from "swr";
import { useRouter } from 'next/router'
import AddItem from "../components/AddItem";
import { addToCart, Cart } from "../lib/cart";
import ShoppingCart from "../components/ShoppingCart";

enum AppState {
  home,
  addItem,
  checkout
};

function Homepage() {
  const [cart, setCart] = React.useState<Cart>({lineItems: [], totalPrice: 0});
  const [isLoading, setIsLoading] = React.useState(false);
  const router = useRouter();

  const [appState, setAppState] = React.useState<AppState>(AppState.home);
  const [selectedItem, setSelectedItem] = React.useState<string>();

  // const goToCheckout = async () => {
  //   setIsLoading(true);
  //   const items = cart.lineItems.map(item => ({
  //     id: item.item.id,
  //     title: item.item.name,
  //     description: item.item.description,
  //     unit_price: item.item.price,
  //     quantity: item.quantity
  //   }));

  //   const response = await fetch("/api/admin", {
  //     method: "post",
  //     body: JSON.stringify(items)
  //   });

  //   const data = await response.json();
    
  //   const link = data.sandbox_init_point;
  //   router.push(link);
  // }

  return (
    <>
      {appState === AppState.home ? (
        <PlasmicHomepage
          menuItem={{
            onSelect: (id) => {
              setAppState(AppState.addItem);
              setSelectedItem(id);
            }
          }}
          cartButton={{
            isEmpty: cart.lineItems.length === 0
          }}
        />
      ) : appState === AppState.addItem ? (
        <AddItem
          onBack={() => setAppState(AppState.home)}
          onAdd={(productId, variantId, entry) => {
            if (productId) {
              addToCart(productId, variantId, 1, entry, setCart)
            }
            setAppState(AppState.checkout)
          }}
          entryId={selectedItem}
        />
      ) : appState === AppState.checkout ? (
        <ShoppingCart
          cart={cart}
          setCart={setCart}
          onBack={() => setAppState(AppState.home)}
          onCheckout={() => { }}
        />
      ) : null}
    </>
  );
}

export default Homepage;
