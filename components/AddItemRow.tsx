// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import {
  PlasmicAddItemRow,
  DefaultAddItemRowProps
} from "./plasmic/isv/PlasmicAddItemRow";
import { HTMLElementRefOf } from "@plasmicapp/react-web";
import { useDataEnv  } from "@plasmicapp/host";

// Your component props start with props for variants and slots you defined
// in Plasmic, but you can add more here, like event handlers that you can
// attach to named nodes in your component.
//
// If you don't want to expose certain variants or slots as a prop, you can use
// Omit to hide them:
//
// interface AddItemRowProps extends Omit<DefaultAddItemRowProps, "hideProps1"|"hideProp2"> {
//   // etc.
// }
//
// You can also stop extending from DefaultAddItemRowProps altogether and have
// total control over the props for your component.
export interface AddItemRowProps extends DefaultAddItemRowProps {
  onSelect: (optionId: string | undefined, optionValueId: string | undefined) => void;
  selectedValues: Record<string, string>;
}

function AddItemRow_(props: AddItemRowProps) {
  const ref = React.createRef<HTMLDivElement>();
  const { onSelect, selectedValues, ...rest } = props;

  const [isSelected, setIsSelected] = React.useState(false);
  const [optionId, setOptionId] = React.useState<string | undefined>();
  const [optionValueId, setOptionValueId] = React.useState<string | undefined>();

  React.useEffect(() => {
    if (ref.current) {
      setOptionId(ref.current?.attributes.getNamedItem("data-menuoption-id")?.value);
      setOptionValueId(ref.current?.attributes.getNamedItem("data-menuoptionvalue-id")?.value);
    }
  }, [ref])

  React.useEffect(() => {
    if (optionId && optionValueId && selectedValues[optionId ?? ""] === optionValueId) {
      setIsSelected(true)
    } else {
      setIsSelected(false);
    }
  }, [optionId, optionValueId, selectedValues])
  return <PlasmicAddItemRow 
    root={{
      ref,
      onClick: () => onSelect(optionId, optionValueId)
    }} 
    isSelected={isSelected}
    {...rest} 
  />;
}

const AddItemRow = React.forwardRef(AddItemRow_);
export default AddItemRow;
