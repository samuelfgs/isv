// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import {
  PlasmicShoppingCart,
  DefaultShoppingCartProps
} from "./plasmic/isv/PlasmicShoppingCart";
import { HTMLElementRefOf } from "@plasmicapp/react-web";
import { Cart, formatPrice, getQuantityItem, handleQuantityChange, LineItem } from "../common";
import ShoppingCartLineItem from "./ShoppingCartLineItem";

// Your component props start with props for variants and slots you defined
// in Plasmic, but you can add more here, like event handlers that you can
// attach to named nodes in your component.
//
// If you don't want to expose certain variants or slots as a prop, you can use
// Omit to hide them:
//
// interface ShoppingCartProps extends Omit<DefaultShoppingCartProps, "hideProps1"|"hideProp2"> {
//   // etc.
// }
//
// You can also stop extending from DefaultShoppingCartProps altogether and have
// total control over the props for your component.
export interface ShoppingCartProps extends DefaultShoppingCartProps {
  lineItems: LineItem[];
  cart: Cart,
  setCart: React.Dispatch<React.SetStateAction<Cart>>
}

function ShoppingCart_(props: ShoppingCartProps, ref: HTMLElementRefOf<"div">) {
  const { lineItems, cart, setCart, ...rest } = props;
  return <PlasmicShoppingCart 
    root={{ ref }} 
    {...rest} 
    lineItems={{
      children: lineItems.map((item, i) => (
        <ShoppingCartLineItem
          index={i+1}
          name={item.item.name}
          price={`R$ ${formatPrice(item.item.price)}`}
          even={i%2 === 1}
          quantity={getQuantityItem(item.item, cart)}
          onChangeQuantity={handleQuantityChange(item.item, cart, setCart)}
        />
      )
    )}}
    isEmpty={lineItems.length === 0}
  />;
}

const ShoppingCart = React.forwardRef(ShoppingCart_);
export default ShoppingCart;
